pattern object v = SimpleObject v || Array v || Function v || Builtin v || SimpleIterator v || Iterator v || Regexp v || StringObject v || NumberObject v || BooleanObject v

externC (needContext) Instanceof : (JSValue, JSValue) -> JSValue

(vmInstruction, tailCall)
instanceof : (JSValue, JSValue) -> JSValue

instanceof (v1, v2) {
    top: match (v1, v2) {
      case (object v1 && object v2) {
          return Instanceof(v1, v2);
      }
      case (true) {
          return false;
      }
    }
}
