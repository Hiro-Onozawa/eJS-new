(vmInstruction, needContext, triggerGC, tailCall)
sub : (JSValue, JSValue) -> JSValue
sub (v1, v2) {
  match (v1, v2) {
    case (Fixnum v1 && Fixnum v2) {
      cint s = FixnumToCint(v1) - FixnumToCint(v2);
      return CintToNumber(s);
    }
    case (Number v1 && Number v2) {
      cdouble x1 = numberToCdouble(v1);
      cdouble x2 = numberToCdouble(v2);
      cdouble d = x1 - x2;
      return CdoubleToNumber(d);
    }
    case (JSValue v1 && Number v2) {
      Number u1 = toNumber(v1);
      return sub(u1, v2);
    }
    case (Number v1 && JSValue v2) {
      Number u2 = toNumber(v2);
      return sub(v1, u2);
    }
    case (JSValue v1 && JSValue v2) {
      return Flonum_Nan;
    }
  }
}